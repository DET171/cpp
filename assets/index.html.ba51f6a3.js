import{e as t}from"./app.468b20d3.js";import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";const d={},a=t(`<h1 id="the-basics-of-the-basics-of-c-by-darryl" tabindex="-1"><a class="header-anchor" href="#the-basics-of-the-basics-of-c-by-darryl" aria-hidden="true">#</a> The basics of the basics of C++ (by Darryl)</h1><p>So apparently we&#39;re supposed to write experience or something but I just learnt cpp a week ago so here is what I know.</p><h2 id="data-types" tabindex="-1"><a class="header-anchor" href="#data-types" aria-hidden="true">#</a> Data Types</h2><h3 id="basic-data-types" tabindex="-1"><a class="header-anchor" href="#basic-data-types" aria-hidden="true">#</a> Basic Data Types</h3><table><thead><tr><th>Data Type</th><th>Size (in bytes)</th><th>Use</th><th>Example</th></tr></thead><tbody><tr><td><code>int</code></td><td>4</td><td>Storing numbers (-2 147 483 648 to 2 147 483 647)</td><td>12 442</td></tr><tr><td><code>float</code></td><td>4</td><td>Storing decimal numbers (up to 7 d.p.)</td><td>5.63562</td></tr><tr><td><code>double</code></td><td>8</td><td>Storing decimal numbers (up to 15 d.p.)</td><td>3.1415926535879732</td></tr><tr><td><code>bool</code></td><td>1</td><td>Storing <code>true</code> or <code>false</code> values</td><td><code>true</code>, <code>false</code></td></tr><tr><td><code>char</code></td><td>1</td><td>Storing a single character</td><td><code>&#39;D&#39;</code>, <code>&#39;$&#39;</code></td></tr><tr><td><code>string</code></td><td>variable</td><td>Storing multi-character text</td><td><code>&#39;hi mom&#39;</code></td></tr></tbody></table><h3 id="data-type-modifiers" tabindex="-1"><a class="header-anchor" href="#data-type-modifiers" aria-hidden="true">#</a> Data Type Modifiers</h3><p>Numeric data types (<code>int</code> and <code>double</code>) can be modified with:</p><ul><li><code>short</code></li><li><code>long</code> (or even <code>long long</code>)</li><li><code>signed</code></li><li><code>unsigned</code></li></ul><p>which give a variety of ranges of the same numerical datatype.</p><table><thead><tr><th>Modified Datatype</th><th>Size (in bytes)</th><th>Range</th></tr></thead><tbody><tr><td><code>short int</code></td><td>2</td><td>-32 768 to 32 767</td></tr><tr><td><code>unsigned short int</code></td><td>2</td><td>0 to 65 535</td></tr><tr><td><code>unsigned int</code></td><td>4</td><td>0 to 4 294 967 295</td></tr><tr><td><code>long int</code> (or just <code>long</code>)</td><td>4</td><td>-2 147 483 648 to 2 147 483 647</td></tr><tr><td><code>unsigned long int</code> (or <code>unsigned long</code>)</td><td>4</td><td>0 to 4 294 967 295</td></tr><tr><td><code>long long int</code> (or <code>long long</code>)</td><td>8</td><td>$-(2^{63})$ to $2^{63} - 1$</td></tr><tr><td><code>unsigned long long int</code></td><td>8</td><td>0 to 18 446 744 073 709 551 615</td></tr><tr><td><code>long double</code></td><td>12</td><td>-</td></tr></tbody></table><h2 id="basic-programs" tabindex="-1"><a class="header-anchor" href="#basic-programs" aria-hidden="true">#</a> Basic Programs</h2><h3 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world" aria-hidden="true">#</a> Hello World</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#282c34;"><code><span class="line"><span style="color:#C678DD;">#include</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#C678DD;">using</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">namespace</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">std</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">int</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">main</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  cout</span><span style="color:#C678DD;">&lt;&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;Hello World&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>This program will print the text &quot;Hello World&quot;.</p><ol><li><code>#include</code> will include certain header files into a program. This will allow us to use whatever is in, in this case, <code>iostream</code>.</li><li><code>using namespace std</code> allows us to use the standard library, which comes in a namespace. Of course, you can forgo this and use <code>std::</code> when you want to use it. However, it is better to define the namespace.</li><li><code>int main() {}</code> creates a function. The name of this function is <code>main</code>. The code is written in <code>{}</code>.</li><li><code>cout</code> prints, or writes, a certain text to the standard output.</li><li>In C++, you must end all statements with <code>;</code>.</li></ol>`,15);function o(s,n){return a}var l=e(d,[["render",o]]);export{l as default};
