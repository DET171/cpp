import{_ as r,r as o,o as s,c as d,a as t,b as e,d as i,e as n}from"./app.b4054d93.js";const c={},l=n('<h2 id="cpp-guide-for-competitive-programming-hci-ec3" tabindex="-1"><a class="header-anchor" href="#cpp-guide-for-competitive-programming-hci-ec3" aria-hidden="true">#</a> CPP Guide for Competitive Programming (HCI EC³)</h2><p>This a guide made by a few EC³ members in Lower Secondary. Have fun reading and getting confused!</p><h3 id="introduction-to-cp" tabindex="-1"><a class="header-anchor" href="#introduction-to-cp" aria-hidden="true">#</a> Introduction to CP</h3><p><em>Informatics olympiads</em>, also known as <em>competitive programming</em>, is a form of programming where contestants are required to solve problems within a certain time limit.</p><p>Their code will be checked against a set of inputs and outputs, which determine if the code is correct.</p><p>This form of programming requires a vast amount of knowledge in common algorithms, math, as well as logical thinking.</p><h3 id="common-terminology" tabindex="-1"><a class="header-anchor" href="#common-terminology" aria-hidden="true">#</a> Common Terminology</h3><p>Not sure what the abbreviations mean? Here you go:</p><table><thead><tr><th>Abbr.</th><th>Meaning</th><th>Notes</th></tr></thead><tbody><tr><td>AC</td><td>All Correct</td><td>Your code produced expected results with the testcases provided.</td></tr><tr><td>WA</td><td>Wrong Answer</td><td>Some/all of the testcases did not produce the expected result.</td></tr><tr><td>TLE</td><td>Time Limit Exceeded</td><td>Your code has run for too long, and the program was killed.</td></tr><tr><td>MLE</td><td>Memory Limit Exceeded</td><td>Your code took up too much memory, and the program was killed.</td></tr><tr><td>RTE(6)</td><td>Runtime Error (6)</td><td>Your program has overflowed in terms of memory capacity.</td></tr><tr><td>RTE(11)</td><td>Runtime Error (11)</td><td>Your program accessed areas in memory which were out of range.</td></tr></tbody></table><p>For those interested in USACO:</p><table><thead><tr><th>Abbr.</th><th>Meaning</th></tr></thead><tbody><tr><td>*</td><td>Correct answer</td></tr><tr><td>X</td><td>Wrong answer</td></tr><tr><td>!</td><td>Runtime error or memory limit exceeded</td></tr><tr><td>E</td><td>Empty output file</td></tr><tr><td>M</td><td>Missing output file</td></tr><tr><td>T</td><td>Time limit exceeded</td></tr></tbody></table><h3 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world" aria-hidden="true">#</a> Hello, World</h3>',12),p={href:"https://codebreaker.xyz/problem/helloworld",target:"_blank",rel:"noopener noreferrer"},m=n(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function u(h,g){const a=o("ExternalLinkIcon");return s(),d("div",null,[l,t("p",null,[e("A very simple program allowing you to AC "),t("a",p,[e("this CP problem"),i(a)])]),m])}const k=r(c,[["render",u],["__file","intro.html.vue"]]);export{k as default};
