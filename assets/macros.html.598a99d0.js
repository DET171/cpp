import{d as s}from"./app.d1fe3447.js";import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";const a={},l=s(`<h1 id="helpful-macros" tabindex="-1"><a class="header-anchor" href="#helpful-macros" aria-hidden="true">#</a> Helpful Macros</h1><p>Title says it. Helpful macros you can use.</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#002B36;"><code><span class="line"><span style="color:#586E75;font-style:italic;">// some are the same with different names</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">ll</span><span style="color:#B58900;"> long long</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">ull</span><span style="color:#B58900;"> unsigned long long</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">ld</span><span style="color:#B58900;"> long double</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">pb</span><span style="color:#B58900;"> push_back</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">mp</span><span style="color:#B58900;"> make_pair</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">pii</span><span style="color:#B58900;"> pair&lt;int,int&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">sz</span><span style="color:#B58900;">(x) (int)(x).size()</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">endl</span><span style="color:#B58900;"> &quot;\\n&quot;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">pll</span><span style="color:#B58900;"> pair&lt;ll,ll&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">vi</span><span style="color:#B58900;"> vector&lt;int&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">vll</span><span style="color:#B58900;"> vector&lt;ll&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">vvi</span><span style="color:#B58900;"> vector&lt;vi&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">vvll</span><span style="color:#B58900;"> vector&lt;vll&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">si</span><span style="color:#B58900;"> set&lt;int&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">sll</span><span style="color:#B58900;"> set&lt;ll&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">sull</span><span style="color:#B58900;"> set&lt;ull&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">vvll</span><span style="color:#B58900;"> vector&lt;vll&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">vpii</span><span style="color:#B58900;"> vector&lt;pii&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">vpll</span><span style="color:#B58900;"> vector&lt;pll&gt;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">all</span><span style="color:#B58900;">(v) (v).begin(),(v).end()</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">FOR</span><span style="color:#B58900;">(i,a,b) for(int i=(a);i&lt;(b);++i)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">FORE</span><span style="color:#B58900;">(i,a,b) for(int i=(a);i&lt;=(b);++i)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">FORR</span><span style="color:#B58900;">(i,a,b) for(int i=(a);i&gt;=(b);--i)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">FORS</span><span style="color:#B58900;">(i,a,b,s) for(int i=(a);i&lt;(b);i+=(s))</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">FOREV</span><span style="color:#B58900;">(i,a,b) for(int i=(a);i&lt;=(b);++i)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">FOREVRE</span><span style="color:#B58900;">(i,a,b) for(int i=(a);i&gt;=(b);--i)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REP</span><span style="color:#B58900;">(i,n) FOR(i,0,n)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPE</span><span style="color:#B58900;">(i,n) FORE(i,0,n)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPR</span><span style="color:#B58900;">(i,n) FORR(i,n,0)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPS</span><span style="color:#B58900;">(i,n,s) FORS(i,0,n,s)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPV</span><span style="color:#B58900;">(i,a,b) FOREV(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPVRE</span><span style="color:#B58900;">(i,a,b) FOREVRE(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">RANGE</span><span style="color:#B58900;">(i,a,b) REPV(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">RANGES</span><span style="color:#B58900;">(i,a,b,s) REPS(i,b,s)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">RANGEV</span><span style="color:#B58900;">(i,a,b) REPV(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">RANGEVRE</span><span style="color:#B58900;">(i,a,b) REPVRE(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPIT</span><span style="color:#B58900;">(it,v) for(auto it=(v).begin();it!=(v).end();++it)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPI</span><span style="color:#B58900;">(i,a,b) FOR(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPIRE</span><span style="color:#B58900;">(i,a,b) FORE(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPIR</span><span style="color:#B58900;">(i,a,b) FORR(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPIS</span><span style="color:#B58900;">(i,a,b,s) FORS(i,a,b,s)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPIV</span><span style="color:#B58900;">(i,a,b) FOREV(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPIVRE</span><span style="color:#B58900;">(i,a,b) FOREVRE(i,a,b)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">print</span><span style="color:#B58900;">(x) cout&lt;&lt;x&lt;&lt;endl</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">println</span><span style="color:#B58900;">(x) cout&lt;&lt;x&lt;&lt;&#39; &#39;;</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPIT</span><span style="color:#B58900;">(it,v) for(auto it=(v).begin();it!=(v).end();++it)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">REPITR</span><span style="color:#B58900;">(it,v) for(auto it=(v).rbegin();it!=(v).rend();++it)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">ALL</span><span style="color:#B58900;">(v) (v).begin(),(v).end()</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">ALLR</span><span style="color:#B58900;">(v) (v).rbegin(),(v).rend()</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">SORT</span><span style="color:#B58900;">(v) sort(ALL(v))</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">SORTR</span><span style="color:#B58900;">(v) sort(ALLR(v))</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">UNIQ</span><span style="color:#B58900;">(v) SORT(v);(v).erase(unique(ALL(v)),(v).end())</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">UNIQR</span><span style="color:#B58900;">(v) SORTR(v);(v).erase(unique(ALLR(v)),(v).rend())</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">SUM</span><span style="color:#B58900;">(v) accumulate(ALL(v),0LL)</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">MIN</span><span style="color:#B58900;">(v) *min_element(ALL(v));</span></span>
<span class="line"><span style="color:#859900;">#define</span><span style="color:#B58900;"> </span><span style="color:#268BD2;">MAX</span><span style="color:#B58900;">(v) *max_element(ALL(v))</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">setIO</span><span style="color:#839496;">(</span><span style="color:#CB4B16;">string</span><span style="color:#839496;"> name </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&quot;&quot;</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">	</span><span style="color:#CB4B16;">ios_base</span><span style="color:#839496;">::</span><span style="color:#268BD2;">sync_with_stdio</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">); </span><span style="color:#268BD2;">cin</span><span style="color:#839496;">.</span><span style="color:#268BD2;">tie</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">);</span><span style="color:#586E75;font-style:italic;"> // see Fast Input &amp; Output</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div>`,3);function p(e,o){return l}var t=n(a,[["render",p]]);export{t as default};
