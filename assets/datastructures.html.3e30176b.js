import{d as s}from"./app.76d9186d.js";import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";const a={},l=s(`<h1 id="data-strutures" tabindex="-1"><a class="header-anchor" href="#data-strutures" aria-hidden="true">#</a> Data Strutures</h1><p>Skip this if your brain cells got murdered in the graph theory section</p><h2 id="fenwick-tree" tabindex="-1"><a class="header-anchor" href="#fenwick-tree" aria-hidden="true">#</a> Fenwick Tree</h2><h3 id="fenwick-tree-explained" tabindex="-1"><a class="header-anchor" href="#fenwick-tree-explained" aria-hidden="true">#</a> Fenwick Tree explained</h3><p>Finds range sum in O(log(N)) time instead of O(N)</p><p>BUT WAIT!!! CANT YOU DO THAT WITH PREFIX SUM??? EVEN THATS FASTER!!!</p><p>Lol no what if you need to update?</p><p>Fenwick tree supports point update and range update \u{1F603}</p><p>A Fenwick Tree is also called a binary-indexed tree.</p><p>So how a Fenwick Tree works is it covers ranges in the array <em>binarily</em> (i made that up)</p><p>Imagine a tree, but the parent node spans from the leftmost node to the middle node. Then, the 2 nodes after that spans half as much as the first one</p><p>To show this, lets say we plot it out</p><p>1111111100000000</p><p>2222000022220000</p><p>Where 1 represents the parent node and 2 represents the child of the parent. If this keeps on going, you will get this:</p><p>0000000000000000</p><p>1111111100000000</p><p>2222000022220000</p><p>3300330033003300</p><p>4040404040404040</p><p>So how does it get range sum now?</p><p>You can see that if you want to get the range sum of nodes 1-8, you can just take the entire segment of 1s</p><p>If you want to get the range sum of 1-5, you can take the 4 2s + the third 4</p><p>So on and so forth</p><h3 id="point-update-fenwick-tree" tabindex="-1"><a class="header-anchor" href="#point-update-fenwick-tree" aria-hidden="true">#</a> Point update Fenwick Tree</h3><p>This can only update one point at a time and get range sums:</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#002B36;"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fw</span><span style="color:#839496;">[N];</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">update</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> v) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;"> (; x</span><span style="color:#859900;">&lt;</span><span style="color:#839496;">N; x</span><span style="color:#859900;">+=</span><span style="color:#839496;">x</span><span style="color:#859900;">&amp;</span><span style="color:#839496;">(</span><span style="color:#859900;">-</span><span style="color:#839496;">x)) </span><span style="color:#268BD2;">fw</span><span style="color:#839496;">[x] </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v; </span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> </span><span style="color:#268BD2;">sum</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> res </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;">(; x; x</span><span style="color:#859900;">-=</span><span style="color:#839496;">x</span><span style="color:#859900;">&amp;</span><span style="color:#839496;">(</span><span style="color:#859900;">-</span><span style="color:#839496;">x)) res </span><span style="color:#859900;">+=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fw</span><span style="color:#839496;">[x];</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> res;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="range-update-fenwick-tree" tabindex="-1"><a class="header-anchor" href="#range-update-fenwick-tree" aria-hidden="true">#</a> Range update Fenwick Tree</h3><p>This can update ranges at a time, using 2 Fenwick Trees:</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#002B36;"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fw</span><span style="color:#839496;">[N], </span><span style="color:#268BD2;">fw2</span><span style="color:#839496;">[N];</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">update</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> v) {</span><span style="color:#586E75;font-style:italic;"> //inclusive</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> tx</span><span style="color:#859900;">=</span><span style="color:#839496;">x; tx </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> N; tx </span><span style="color:#859900;">+=</span><span style="color:#839496;"> tx</span><span style="color:#859900;">&amp;</span><span style="color:#839496;">(</span><span style="color:#859900;">-</span><span style="color:#839496;">tx)) </span><span style="color:#268BD2;">fw</span><span style="color:#839496;">[tx] </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v, </span><span style="color:#268BD2;">fw2</span><span style="color:#839496;">[tx] </span><span style="color:#859900;">-=</span><span style="color:#839496;"> v</span><span style="color:#859900;">*</span><span style="color:#839496;">(x</span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> ty</span><span style="color:#859900;">=</span><span style="color:#839496;">y</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">; ty </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> N; ty </span><span style="color:#859900;">+=</span><span style="color:#839496;"> ty</span><span style="color:#859900;">&amp;</span><span style="color:#839496;">(</span><span style="color:#859900;">-</span><span style="color:#839496;">ty)) </span><span style="color:#268BD2;">fw</span><span style="color:#839496;">[ty] </span><span style="color:#859900;">-=</span><span style="color:#839496;"> v, </span><span style="color:#268BD2;">fw2</span><span style="color:#839496;">[ty] </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v</span><span style="color:#859900;">*</span><span style="color:#839496;">y; </span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> </span><span style="color:#268BD2;">sum</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> res </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> tx</span><span style="color:#859900;">=</span><span style="color:#839496;">x; tx; tx </span><span style="color:#859900;">-=</span><span style="color:#839496;"> tx</span><span style="color:#859900;">&amp;</span><span style="color:#839496;">(</span><span style="color:#859900;">-</span><span style="color:#839496;">tx)) res </span><span style="color:#859900;">+=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fw</span><span style="color:#839496;">[tx]</span><span style="color:#859900;">*</span><span style="color:#839496;">x </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fw2</span><span style="color:#839496;">[tx];</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> res;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> </span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y) {</span><span style="color:#586E75;font-style:italic;"> //inclusive</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">sum</span><span style="color:#839496;">(y)</span><span style="color:#859900;">-</span><span style="color:#268BD2;">sum</span><span style="color:#839496;">(x</span><span style="color:#859900;">-</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="segment-tree" tabindex="-1"><a class="header-anchor" href="#segment-tree" aria-hidden="true">#</a> Segment Tree</h2><p>I warned you</p><h3 id="segment-tree-explained" tabindex="-1"><a class="header-anchor" href="#segment-tree-explained" aria-hidden="true">#</a> Segment tree explained</h3><p>Just an advanced fenwick tree lmao</p><p>But it supports much more, like range set, range add, range min, range max.</p><p>Something very special about segment tree is something called lazy node creation and lazy propagation.</p><p>Now what exactly is a lazy node creation?</p><h3 id="lazy-node-creation" tabindex="-1"><a class="header-anchor" href="#lazy-node-creation" aria-hidden="true">#</a> Lazy node creation</h3><p>It only creates nodes in the tree if it absolutely needs to.</p><p>Now that was easy. Whats lazy propagation?</p><h3 id="lazy-propagation" tabindex="-1"><a class="header-anchor" href="#lazy-propagation" aria-hidden="true">#</a> Lazy propagation</h3><p>It only updates nodes if it is within range of the specified node. Else it will not update anything.</p><h3 id="initializing-the-struct" tabindex="-1"><a class="header-anchor" href="#initializing-the-struct" aria-hidden="true">#</a> Initializing the struct</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#002B36;"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> s, e;</span></span>
<span class="line"><span style="color:#839496;">ll mn, mx, sum;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">bool</span><span style="color:#839496;"> lset;</span></span>
<span class="line"><span style="color:#839496;">ll add_val, set_val;</span></span>
<span class="line"><span style="color:#839496;">node </span><span style="color:#859900;">*</span><span style="color:#839496;">l, </span><span style="color:#859900;">*</span><span style="color:#839496;">r;</span></span>
<span class="line"><span style="color:#268BD2;">node</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> _s, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> _e, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> A[] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;">): </span><span style="color:#268BD2;">s</span><span style="color:#839496;">(_s), </span><span style="color:#268BD2;">e</span><span style="color:#839496;">(_e), </span><span style="color:#268BD2;">mn</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">mx</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">sum</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">lset</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">add_val</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">set_val</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">l</span><span style="color:#839496;">(</span><span style="color:#B58900;">NULL</span><span style="color:#839496;">), </span><span style="color:#268BD2;">r</span><span style="color:#839496;">(</span><span style="color:#B58900;">NULL</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (A </span><span style="color:#859900;">==</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;">) </span><span style="color:#859900;">return</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> e) mn </span><span style="color:#859900;">=</span><span style="color:#839496;"> mx </span><span style="color:#859900;">=</span><span style="color:#839496;"> sum </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">A</span><span style="color:#839496;">[s];</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">else</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        l </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">node</span><span style="color:#839496;">(s, (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">, A), r </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">node</span><span style="color:#839496;">((s</span><span style="color:#859900;">+</span><span style="color:#839496;">e</span><span style="color:#859900;">+</span><span style="color:#D33682;">2</span><span style="color:#839496;">)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">, e, A);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">combine</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="lazy-propagation-1" tabindex="-1"><a class="header-anchor" href="#lazy-propagation-1" aria-hidden="true">#</a> Lazy propagation</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#002B36;"><code><span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(</span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> v) {</span></span>
<span class="line"><span style="color:#839496;">        lset </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        mn </span><span style="color:#859900;">=</span><span style="color:#839496;"> mx </span><span style="color:#859900;">=</span><span style="color:#839496;"> set_val </span><span style="color:#859900;">=</span><span style="color:#839496;"> v;</span></span>
<span class="line"><span style="color:#839496;">        sum </span><span style="color:#859900;">=</span><span style="color:#839496;"> v </span><span style="color:#859900;">*</span><span style="color:#839496;"> (e</span><span style="color:#859900;">-</span><span style="color:#839496;">s</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        add_val </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">self_add</span><span style="color:#839496;">(</span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> v) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (lset) { </span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(v </span><span style="color:#859900;">+</span><span style="color:#839496;"> set_val); </span><span style="color:#859900;">return</span><span style="color:#839496;">; }</span></span>
<span class="line"><span style="color:#839496;">        mn </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v, mx </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v, add_val </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v;</span></span>
<span class="line"><span style="color:#839496;">        sum </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v</span><span style="color:#859900;">*</span><span style="color:#839496;">(e</span><span style="color:#859900;">-</span><span style="color:#839496;">s</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> e) </span><span style="color:#859900;">return</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (lset) {</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(set_val), </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(set_val);</span></span>
<span class="line"><span style="color:#839496;">            lset </span><span style="color:#859900;">=</span><span style="color:#839496;"> set_val </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        }   </span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (add_val </span><span style="color:#859900;">!=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">self_add</span><span style="color:#839496;">(add_val), </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">self_add</span><span style="color:#839496;">(add_val);</span></span>
<span class="line"><span style="color:#839496;">            add_val </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        }</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="range-sum" tabindex="-1"><a class="header-anchor" href="#range-sum" aria-hidden="true">#</a> Range sum</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#002B36;"><code><span class="line"><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> </span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> x </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> e </span><span style="color:#859900;">==</span><span style="color:#839496;"> y) </span><span style="color:#859900;">return</span><span style="color:#839496;"> sum;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (l </span><span style="color:#859900;">==</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> lset) </span><span style="color:#859900;">return</span><span style="color:#839496;"> (sum </span><span style="color:#859900;">/</span><span style="color:#839496;"> (e</span><span style="color:#859900;">-</span><span style="color:#839496;">s</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">)) </span><span style="color:#859900;">*</span><span style="color:#839496;"> (y</span><span style="color:#859900;">-</span><span style="color:#839496;">x</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> m </span><span style="color:#859900;">=</span><span style="color:#839496;"> (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (y </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> m) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(x, y);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (x </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> m) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(x, y);</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(x, m) </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(m</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">, y);</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="range-update" tabindex="-1"><a class="header-anchor" href="#range-update" aria-hidden="true">#</a> Range update</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#002B36;"><code><span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y, </span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> v) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> x </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> e </span><span style="color:#859900;">==</span><span style="color:#839496;"> y) { </span><span style="color:#268BD2;">self_add</span><span style="color:#839496;">(v); </span><span style="color:#859900;">return</span><span style="color:#839496;">; }</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> m </span><span style="color:#859900;">=</span><span style="color:#839496;"> (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">create_children</span><span style="color:#839496;">(); </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (x </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> m) </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">add</span><span style="color:#839496;">(x, </span><span style="color:#268BD2;">min</span><span style="color:#839496;">(y, m), v);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (y </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> m) </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">add</span><span style="color:#839496;">(</span><span style="color:#268BD2;">max</span><span style="color:#839496;">(x, m</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">), y, v);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">combine</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="all-in-one-segment-tree" tabindex="-1"><a class="header-anchor" href="#all-in-one-segment-tree" aria-hidden="true">#</a> All in one segment tree</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="shiki" style="background-color:#002B36;"><code><span class="line"><span style="color:#859900;">typedef</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">long</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">long</span><span style="color:#839496;"> ll;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">struct</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">node</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> s, e;</span></span>
<span class="line"><span style="color:#839496;">    ll mn, mx, sum;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">bool</span><span style="color:#839496;"> lset;</span></span>
<span class="line"><span style="color:#839496;">    ll add_val, set_val;</span></span>
<span class="line"><span style="color:#839496;">    node </span><span style="color:#859900;">*</span><span style="color:#839496;">l, </span><span style="color:#859900;">*</span><span style="color:#839496;">r;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">node</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> _s, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> _e, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> A[] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;">): </span><span style="color:#268BD2;">s</span><span style="color:#839496;">(_s), </span><span style="color:#268BD2;">e</span><span style="color:#839496;">(_e), </span><span style="color:#268BD2;">mn</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">mx</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">sum</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">lset</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">add_val</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">set_val</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">), </span><span style="color:#268BD2;">l</span><span style="color:#839496;">(</span><span style="color:#B58900;">NULL</span><span style="color:#839496;">), </span><span style="color:#268BD2;">r</span><span style="color:#839496;">(</span><span style="color:#B58900;">NULL</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (A </span><span style="color:#859900;">==</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;">) </span><span style="color:#859900;">return</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> e) mn </span><span style="color:#859900;">=</span><span style="color:#839496;"> mx </span><span style="color:#859900;">=</span><span style="color:#839496;"> sum </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">A</span><span style="color:#839496;">[s];</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">else</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">            l </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">node</span><span style="color:#839496;">(s, (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">, A), r </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">node</span><span style="color:#839496;">((s</span><span style="color:#859900;">+</span><span style="color:#839496;">e</span><span style="color:#859900;">+</span><span style="color:#D33682;">2</span><span style="color:#839496;">)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">, e, A);</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">combine</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">        }</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">create_children</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> e) </span><span style="color:#859900;">return</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (l </span><span style="color:#859900;">!=</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;">) </span><span style="color:#859900;">return</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> m </span><span style="color:#859900;">=</span><span style="color:#839496;"> (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        l </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">node</span><span style="color:#839496;">(s, m);</span></span>
<span class="line"><span style="color:#839496;">        r </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">node</span><span style="color:#839496;">(m</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">, e);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(</span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> v) {</span></span>
<span class="line"><span style="color:#839496;">        lset </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        mn </span><span style="color:#859900;">=</span><span style="color:#839496;"> mx </span><span style="color:#859900;">=</span><span style="color:#839496;"> set_val </span><span style="color:#859900;">=</span><span style="color:#839496;"> v;</span></span>
<span class="line"><span style="color:#839496;">        sum </span><span style="color:#859900;">=</span><span style="color:#839496;"> v </span><span style="color:#859900;">*</span><span style="color:#839496;"> (e</span><span style="color:#859900;">-</span><span style="color:#839496;">s</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        add_val </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">self_add</span><span style="color:#839496;">(</span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> v) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (lset) { </span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(v </span><span style="color:#859900;">+</span><span style="color:#839496;"> set_val); </span><span style="color:#859900;">return</span><span style="color:#839496;">; }</span></span>
<span class="line"><span style="color:#839496;">        mn </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v, mx </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v, add_val </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v;</span></span>
<span class="line"><span style="color:#839496;">        sum </span><span style="color:#859900;">+=</span><span style="color:#839496;"> v</span><span style="color:#859900;">*</span><span style="color:#839496;">(e</span><span style="color:#859900;">-</span><span style="color:#839496;">s</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> e) </span><span style="color:#859900;">return</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (lset) {</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(set_val), </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(set_val);</span></span>
<span class="line"><span style="color:#839496;">            lset </span><span style="color:#859900;">=</span><span style="color:#839496;"> set_val </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        }   </span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (add_val </span><span style="color:#859900;">!=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">self_add</span><span style="color:#839496;">(add_val), </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">self_add</span><span style="color:#839496;">(add_val);</span></span>
<span class="line"><span style="color:#839496;">            add_val </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        }</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">combine</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (l </span><span style="color:#859900;">==</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;">) </span><span style="color:#859900;">return</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        sum </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">sum</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">sum</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        mn </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">min</span><span style="color:#839496;">(</span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">mn</span><span style="color:#839496;">, </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">mn</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        mx </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">max</span><span style="color:#839496;">(</span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">mx</span><span style="color:#839496;">, </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">mx</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">add</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y, </span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> v) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> x </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> e </span><span style="color:#859900;">==</span><span style="color:#839496;"> y) { </span><span style="color:#268BD2;">self_add</span><span style="color:#839496;">(v); </span><span style="color:#859900;">return</span><span style="color:#839496;">; }</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> m </span><span style="color:#859900;">=</span><span style="color:#839496;"> (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">create_children</span><span style="color:#839496;">(); </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (x </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> m) </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">add</span><span style="color:#839496;">(x, </span><span style="color:#268BD2;">min</span><span style="color:#839496;">(y, m), v);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (y </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> m) </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">add</span><span style="color:#839496;">(</span><span style="color:#268BD2;">max</span><span style="color:#839496;">(x, m</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">), y, v);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">combine</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">void</span><span style="color:#839496;"> </span><span style="color:#268BD2;">set</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y, </span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> v) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> x </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> e </span><span style="color:#859900;">==</span><span style="color:#839496;"> y) { </span><span style="color:#268BD2;">self_set</span><span style="color:#839496;">(v); </span><span style="color:#859900;">return</span><span style="color:#839496;">; }</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> m </span><span style="color:#859900;">=</span><span style="color:#839496;"> (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">create_children</span><span style="color:#839496;">(); </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (x </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> m) </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">set</span><span style="color:#839496;">(x, </span><span style="color:#268BD2;">min</span><span style="color:#839496;">(y, m), v);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (y </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> m) </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">set</span><span style="color:#839496;">(</span><span style="color:#268BD2;">max</span><span style="color:#839496;">(x, m</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">), y, v);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">combine</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> </span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> x </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> e </span><span style="color:#859900;">==</span><span style="color:#839496;"> y) </span><span style="color:#859900;">return</span><span style="color:#839496;"> sum;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (l </span><span style="color:#859900;">==</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> lset) </span><span style="color:#859900;">return</span><span style="color:#839496;"> (sum </span><span style="color:#859900;">/</span><span style="color:#839496;"> (e</span><span style="color:#859900;">-</span><span style="color:#839496;">s</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">)) </span><span style="color:#859900;">*</span><span style="color:#839496;"> (y</span><span style="color:#859900;">-</span><span style="color:#839496;">x</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> m </span><span style="color:#859900;">=</span><span style="color:#839496;"> (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (y </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> m) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(x, y);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (x </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> m) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(x, y);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(x, m) </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_sum</span><span style="color:#839496;">(m</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">, y);</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> </span><span style="color:#268BD2;">range_min</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> x </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> e </span><span style="color:#859900;">==</span><span style="color:#839496;"> y) </span><span style="color:#859900;">return</span><span style="color:#839496;"> mn;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (l </span><span style="color:#859900;">==</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> lset) </span><span style="color:#859900;">return</span><span style="color:#839496;"> mn;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> m </span><span style="color:#859900;">=</span><span style="color:#839496;"> (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (y </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> m) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_min</span><span style="color:#839496;">(x, y);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (x </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> m) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_min</span><span style="color:#839496;">(x, y);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">min</span><span style="color:#839496;">(</span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_min</span><span style="color:#839496;">(x, m), </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_min</span><span style="color:#839496;">(m</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">, y));</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#CB4B16;">ll</span><span style="color:#839496;"> </span><span style="color:#268BD2;">range_max</span><span style="color:#839496;">(</span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> x, </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> y) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (s </span><span style="color:#859900;">==</span><span style="color:#839496;"> x </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> e </span><span style="color:#859900;">==</span><span style="color:#839496;"> y) </span><span style="color:#859900;">return</span><span style="color:#839496;"> mx;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (l </span><span style="color:#859900;">==</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> lset) </span><span style="color:#859900;">return</span><span style="color:#839496;"> mx;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">int</span><span style="color:#839496;"> m </span><span style="color:#859900;">=</span><span style="color:#839496;"> (s</span><span style="color:#859900;">+</span><span style="color:#839496;">e)</span><span style="color:#859900;">&gt;&gt;</span><span style="color:#D33682;">1</span><span style="color:#839496;">;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">lazy_propagate</span><span style="color:#839496;">();</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (y </span><span style="color:#859900;">&lt;=</span><span style="color:#839496;"> m) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_max</span><span style="color:#839496;">(x, y);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (x </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> m) </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_max</span><span style="color:#839496;">(x, y);</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">max</span><span style="color:#839496;">(</span><span style="color:#268BD2;">l</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_max</span><span style="color:#839496;">(x, m), </span><span style="color:#268BD2;">r</span><span style="color:#839496;">-&gt;</span><span style="color:#268BD2;">range_max</span><span style="color:#839496;">(m</span><span style="color:#859900;">+</span><span style="color:#D33682;">1</span><span style="color:#839496;">, y));</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">~node</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (l </span><span style="color:#859900;">!=</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;">) </span><span style="color:#859900;">delete</span><span style="color:#839496;"> l;</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (r </span><span style="color:#859900;">!=</span><span style="color:#839496;"> </span><span style="color:#B58900;">NULL</span><span style="color:#839496;">) </span><span style="color:#859900;">delete</span><span style="color:#839496;"> r;</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">} </span><span style="color:#859900;">*</span><span style="color:#839496;">root;</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br></div></div><p>I ripped everything off of noiref go check it out</p><h2 id="fenwick-vs-segment" tabindex="-1"><a class="header-anchor" href="#fenwick-vs-segment" aria-hidden="true">#</a> Fenwick vs Segment</h2><table><thead><tr><th>Factor\\DS</th><th>Fenwick Tree</th><th>Segment tree</th></tr></thead><tbody><tr><td>O(log(N))</td><td>Fast log(N)</td><td>Slow log(N)</td></tr><tr><td>Functions</td><td>Less functions</td><td>More functions</td></tr><tr><td>Memory</td><td>Less memory</td><td>More memory</td></tr><tr><td>Preprocessing time</td><td>O(Nlog(N))</td><td>O(N)</td></tr><tr><td>Code length</td><td>Short and elegant</td><td>Super long \u{1F480}</td></tr></tbody></table>`,55);function p(o,e){return l}var c=n(a,[["render",p]]);export{c as default};
